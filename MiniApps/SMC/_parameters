# This file contains the runtime parameters for all SMC problems.  It
# is parsed by write_probin.py and merged with probin.template to produce
# the probin.f90 at compile time.
#
# problem-specific runtime parameters should be defined in a _parameters
# file in the problem directory.


#-----------------------------------------------------------------------------
# category: general SMC
#-----------------------------------------------------------------------------

# General verbosity
verbose                             integer            0

# job name printed in output
job_name                            character          ""

# check nans in the solution?
check_nans                          logical            .false.

#-----------------------------------------------------------------------------
# category: tiling
#-----------------------------------------------------------------------------
do_tiling                           logical            .true.
tilesize_x                          integer            1024000
tilesize_y                          integer            4
tilesize_z                          integer            4

#-----------------------------------------------------------------------------
# category: timestepping
#-----------------------------------------------------------------------------

# simulation stop time
stop_time                           real               -1.d0

# Maximum number of steps in the simulation.
max_step                            integer            1

# CFL factor to use in the computation of the advection timestep constraint
cflfac                              real               0.5d0

# How often do we update Courant number
cfl_int                             integer            10

# the multiplicative factor ($\le 1$) to reduce the initial timestep as
# computed by the various timestep estimators
init_shrink                         real               1.d0

# the minimum allowed timestep -- we abort if dt drops below this value
small_dt                            real               1.d-30

# The maximum scale factor that the time step is allowed to grow by per
# time step.
max_dt_growth                       real               1.1d0

# This is the maximum dt that is allowed
max_dt                              real               1.0d33

# Fix the time step.  If -1.0, then use the standard time step.
fixed_dt                            real               -1.0d0


#-----------------------------------------------------------------------------
# category: grid
#-----------------------------------------------------------------------------

# physical coordinates of lo-x corner of problem domain
prob_lo_x                           real               ZERO

# physical coordinates of lo-y corner of problem domain
prob_lo_y                           real               ZERO

# physical coordinates of lo-z corner of problem domain
prob_lo_z                           real               ZERO

# physical coordinates of hi-x corner of problem domain
prob_hi_x                           real               1.d0

# physical coordinates of hi-y corner of problem domain
prob_hi_y                           real               1.d0

# physical coordinates of hi-z corner of problem domain
prob_hi_z                           real               1.d0

# The largest grid size that will be created using make\_new\_grids.
max_grid_size                       integer            64

# Number of cells in the x-direction
n_cellx                             integer            -1

# Number of cells in the y-direction
n_celly                             integer            -1

# Number of cells in the z-direction
n_cellz                             integer            -1


#-----------------------------------------------------------------------------
# category: Input/Output
#-----------------------------------------------------------------------------

# plot interval
plot_int                            integer            0

# prefix to use in plotfile file names
plot_base_name                      character          "plt"

# If lUsingNFiles = .true., use this many processors to write checkpoint
# and plotfiles.  Fortran has the unfortunate feature of each processor
# only being able to write out 1-2GB each without crashing.
nOutFiles                           integer            64

# If .true., use nOutFiles processors to write checkpoint and plotfiles.
# Fortran has the unfortunate feature of each processor only being able
# to write out 1-2GB each without crashing.
lUsingNFiles                        logical            .true.


# parameters for this problem
rfire			real		0.01d0
